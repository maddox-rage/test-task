// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  feedbacks Feedback[]
  upvote    Upvote[]
}


model Feedback {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  categoryId  Int
  statusId    Int
  authorId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  upvote      Upvote[]

  category    Category @relation(fields: [categoryId], references: [id])
  status      Status   @relation(fields: [statusId], references: [id])
  author      User     @relation(fields: [authorId], references: [id])
}

model Upvote {
  id         Int      @id @default(autoincrement())
  feedbackId Int
  userId     Int

  feedback   Feedback @relation(fields: [feedbackId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
   @@unique([userId, feedbackId])
}

model Category {
  id        Int    @id @default(autoincrement())
  name      String
  feedbacks Feedback[]
}

model Status {
  id        Int    @id @default(autoincrement())
  name      String
  feedbacks Feedback[]
}

